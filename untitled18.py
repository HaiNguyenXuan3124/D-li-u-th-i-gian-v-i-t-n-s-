# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lbtmVtErucrcKIvcP8phHOVFpBy-Q5Nn
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy import signal
# Đọc dữ liệu
file_path = '/content/XYZ_IR(1).csv'
df = pd.read_csv(file_path)

df

#Kiểm tra dữ liệu thiếu
print("Số giá trị thiếu trên từng cột:")
print(df.isnull().sum())

cols = ['1.22596', '0.77682', '1.6248']

for col in cols:
    sig = df[col].values
    sig_detrend = signal.detrend(sig)  # Loại bỏ xu hướng để biểu diễn rõ dao động
    plt.figure(figsize=(12, 4))
    plt.plot(sig_detrend)
    plt.title(f'Tín hiệu {col} ')
    plt.xlabel('Mẫu')
    plt.ylabel('Biên độ')
    plt.grid()
    plt.show()

# Giả định tần số lấy mẫu (Hz)
fs = 100
n = len(df)

time = np.arange(n) / fs

def plot_fft(signal_data, fs, title):
    freq = np.fft.fftfreq(len(signal_data), d=1/fs)
    fft_vals = np.fft.fft(signal_data)
    plt.figure(figsize=(10,5))
    plt.plot(freq[:len(freq)//2], np.abs(fft_vals)[:len(fft_vals)//2])
    plt.title(f'Phổ tần số - {title}')
    plt.xlabel('Tần số (Hz)')
    plt.ylabel('Biên độ')
    plt.grid()
    plt.show()

for col in cols:
    sig = df[col].values
    sig_detrend = signal.detrend(sig)
    plot_fft(sig_detrend, fs, col)

from scipy.signal import butter, filtfilt

def butter_lowpass(cutoff, fs, order=4):
    nyq = 0.5 * fs  # tần số Nyquist
    normal_cutoff = cutoff / nyq
    b, a = butter(order, normal_cutoff, btype='low', analog=False)
    return b, a

def apply_lowpass_filter(data, cutoff, fs, order=4):
    b, a = butter_lowpass(cutoff, fs, order=order)
    y = filtfilt(b, a, data)
    return y

cutoff_freq = 30  # Tần số cắt 30 Hz

import matplotlib.pyplot as plt

for col in cols:
    sig = df[col].values
    sig_detrend = signal.detrend(sig)
    sig_filtered = apply_lowpass_filter(sig_detrend, cutoff_freq, fs)

    # Vẽ so sánh tín hiệu trước và sau lọc
    plt.figure(figsize=(12, 5))
    plt.plot(sig_detrend, label='Trước lọc')
    plt.plot(sig_filtered, label='Sau lọc', linewidth=2)
    plt.title(f'Tín hiệu {col}  sau lọc thông thấp')
    plt.xlabel('Mẫu')
    plt.ylabel('Biên độ')
    plt.legend()
    plt.grid()
    plt.show()

